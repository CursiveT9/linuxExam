version: "3.8"
services:
  gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    environment:
      - REDIS_HOST=redis
      - DOMAIN_SERVICE_HOST=domain-service
      - DOMAIN_SERVICE_PORT=50051
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - domain-service
      - logstash
    networks:
      - elk

  domain-service:
    build: ./domain-service
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=example
      - DB_NAME=main_db
    depends_on:
      - db
    networks:
      - elk

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - elk

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: main_db
    ports:
      - "5432:5432"
    volumes:
      - ./domain-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elk

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - elk

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - elk

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - elk

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    networks:
      - elk
    ports:
      - "9200:9200"  # HTTP порт
      - "9300:9300"  # транспортный порт
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Отключение безопасности, если необходимо
      - ELASTICSEARCH_HTTP_ENABLED=true  # Убедитесь, что HTTP доступ включён

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    networks:
      - elk
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    environment:
      - XPACK_MONITORING_ENABLED=false
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    networks:
      - elk
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge